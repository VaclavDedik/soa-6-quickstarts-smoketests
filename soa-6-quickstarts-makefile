SLEEP_TIME=1m 30s

bean-service bpel-service/loan_approval bpel-service/say_hello bpel-service/simple_correlation bpm-service camel-jaxb demos/orders remote-invoker transform-jaxb transform-xslt validate-xml:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java

bpel-service/jms_binding:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-bpel-jms-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy
	mvn exec:java

bpel-service/xts_subordinate_wsba bpel-service/xts_wsat:
	mvn clean install
	cp ${JBOSS_HOME}/docs/examples/configs/standalone-xts.xml ${JBOSS_HOME}/standalone/configuration/
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-xts.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy

camel-amqp-binding:
	mvn clean install

camel-binding:
	mvn clean install
	mvn -Dtest=CamelBindingTest test

camel-bus-cdi camel-quartz-binding:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy

# camel-mail-binding: mail needs to be setup if there are to be no warnings in the logs
camel-ftp-binding camel-mail-binding:
	mvn clean install -Dmaven.test.skip=true
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy

camel-jms-binding:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-camel-jms-binding-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy
	mvn exec:java

# camel-netty-binding: we should also consider adding security settings to standalone-full.xml and run $ mvn exec:java without -Pudp as mentioned in readme
camel-netty-binding:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java -Pudp

camel-service:
	mvn clean install
	mvn -Dtest=CamelServiceTest test

camel-soap-proxy:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	cp target/ReverseService.war ${JBOSS_HOME}/standalone/deployments
	mvn jboss-as:deploy
	mvn exec:java

# camel-sql-binding: schema.sql need to be exported if there are to be no errors in the logs
# demos/helpdesk-webapp: some aditional mvn exec:java commands could be executed too, see readme
camel-sql-binding camel-jpa-binding demos/helpdesk-webapp:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy

demos/cluster demos/multiApp demos/policy-security-saml:
	# Very complicated, needs to be dealt with later
	false

demos/helpdesk:
	mvn clean install
	mvn -Dtest=HelpDeskTests test

demos/policy-security-basic demos/policy-security-wss-username:
	mvn clean install
	keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit \
			-keystore ${JBOSS_HOME}/standalone/configuration/tomcat.jks \
			-dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
	${JBOSS_HOME}/bin/add-user.sh -a -u kermit -p the-frog-1 -r ApplicationRealm -ro friend -s
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https:add(socket-binding=https,scheme=https,protocol="HTTP/1.1",secure=true)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https/ssl=configuration:add(name="https",password="changeit",certificate-key-file="${jboss.server.config.dir}/tomcat.jks")'
	# restart might be required here
	mvn jboss-as:deploy
	mvn exec:java -Dexec.args="confidentiality clientAuthentication"

demos/policy-security-cert:
	mvn clean install
	keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit \
			-keystore ${JBOSS_HOME}/standalone/configuration/tomcat.jks \
			-dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
	${JBOSS_HOME}/bin/add-user.sh -a -u kermit -p the-frog-1 -r ApplicationRealm -ro friend -s
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https:add(socket-binding=https,scheme=https,protocol="HTTP/1.1",secure=true)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https/ssl=configuration:add(name="https",password="changeit",certificate-key-file="../standalone/configuration/tomcat.jks")'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=policy-security-cert/:add(cache-type=default)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=policy-security-cert/authentication=classic:add(login-modules=[{"code"=>"org.switchyard.security.login.CertificateLoginModule", "flag"=>"required", "module-options"=>[("keyStoreLocation"=>"${jboss.server.config.dir}/users.jks"),("keyStorePassword"=>"changeit"),("rolesProperties"=>"${jboss.server.config.dir}/roles.properties")]}])'
	cp users.jks ${JBOSS_HOME}/standalone/configuration/
	cp roles.properties ${JBOSS_HOME}/standalone/configuration/
	# restart might be required here
	mvn jboss-as:deploy
	mvn exec:java -Dexec.args="confidentiality signencrypt"

demos/policy-security-wss-signencrypt:
	mvn clean install
	keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit \
			-keystore ${JBOSS_HOME}/standalone/configuration/tomcat.jks \
			-dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
	${JBOSS_HOME}/bin/add-user.sh -a -u kermit -p the-frog-1 -r ApplicationRealm -ro friend -s
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https:add(socket-binding=https,scheme=https,protocol="HTTP/1.1",secure=true)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https/ssl=configuration:add(name="https",password="changeit",certificate-key-file="${jboss.server.config.dir}/tomcat.jks")'
	# restart might be required here
	mvn jboss-as:deploy
	mvn exec:java -Dexec.args="confidentiality signencrypt"

demos/policy-transaction:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-demo-policy-transaction-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy
	mvn exec:java

http-binding:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java -Dexec.args="vineyard"

jca-inflow-activemq jca-outbound-activemq:
	mvn clean install
	wget http://repo1.maven.org/maven2/org/apache/activemq/activemq-rar/5.8.0/activemq-rar-5.8.0.rar
	mv activemq-rar-5.8.0.rar ${JBOSS_HOME}/standalone/deployments/activemq-rar.rar
	# download and start of activemq required here
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java

jca-inflow-hornetq:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-jca-inflow-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy
	mvn exec:java

jca-outbound-hornetq:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-jca-outbound-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy
	mvn exec:java

rest-binding:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java -Dexec.args="new"
	mvn exec:java -Dexec.args="add 1 3 10"
	mvn exec:java -Dexec.args="add 1 4 1"
	mvn exec:java -Dexec.args="del 1 3"
	mvn exec:java -Dexec.args="get 1"

rules-camel-cbr:
	mvn clean install
	mvn -Dtest=RulesCamelCBRTest test

rules-interview rules-interview-container:
	mvn clean install
	mvn -Dtest=RulesInterviewTest test

soap-addressing:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java -Dexec.args="Boeing 10"

soap-attachment soap-mtom:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java

soap-binding-rpc:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn exec:java -Dexec.args="Einstein"

transform-json:
	mvn clean install
	mvn -Dtest=JsonTransformationTest test

transform-smooks:
	mvn clean install
	${JBOSS_HOME}/bin/standalone.sh &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy
	mvn -Dtest=ServiceTransformationTest test
