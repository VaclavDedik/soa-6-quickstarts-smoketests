SLEEP_TIME=1m

bean-service bpel-service/loan_approval bpel-service/say_hello bpel-service/simple_correlation bpm-service camel-jaxb demos/orders remote-invoker transform-jaxb transform-xslt validate-xml:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

bpel-service/jms_binding:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-bpel-jms-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

bpel-service/xts_subordinate_wsba bpel-service/xts_wsat:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/extension=org.jboss.as.xts:add'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=xts:add(url="http://${jboss.bind.address:127.0.0.1}:8080/ws-c11/ActivationService")'
	mvn jboss-as:deploy -s ${SETTINGS}

camel-amqp-binding:
	mvn clean install -s ${SETTINGS}

camel-binding:
	mvn clean install -s ${SETTINGS}
	mvn -Dtest=CamelBindingTest test -s ${SETTINGS}

camel-bus-cdi camel-quartz-binding:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}

# camel-mail-binding: mail needs to be setup if there are to be no warnings in the logs
camel-ftp-binding camel-mail-binding:
	mvn clean install -Dmaven.test.skip=true -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}

camel-jms-binding:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-camel-jms-binding-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

# camel-netty-binding: we should also consider adding security settings to standalone-full.xml and run $ mvn exec:java without -Pudp as mentioned in readme
camel-netty-binding:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Pudp -s ${SETTINGS}

camel-service:
	mvn clean install -s ${SETTINGS}
	mvn -Dtest=CamelServiceTest test -s ${SETTINGS}

camel-soap-proxy:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	cp target/ReverseService.war ${JBOSS_HOME}/standalone/deployments
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

# camel-sql-binding: schema.sql need to be exported if there are to be no errors in the logs
# demos/helpdesk-webapp: some aditional mvn exec:java commands could be executed too, see readme
camel-sql-binding camel-jpa-binding demos/helpdesk-webapp:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}

demos/cluster:
	mvn clean install -s ${SETTINGS}
	cp -R ${JBOSS_HOME}/standalone ${JBOSS_HOME}/node1
	cp -R ${JBOSS_HOME}/standalone ${JBOSS_HOME}/node2
	cp -R ${JBOSS_HOME}/standalone ${JBOSS_HOME}/node3
	${JBOSS_HOME}/bin/standalone.sh -Djboss.node.name=node1 -Djboss.server.base.dir=node1 --server-config standalone-ha.xml &
	${JBOSS_HOME}/bin/standalone.sh -Djboss.node.name=node2 -Djboss.server.base.dir=node2 -Djboss.socket.binding.port-offset=1000 --server-config standalone-ha.xml &
	${JBOSS_HOME}/bin/standalone.sh -Djboss.node.name=node3 -Djboss.server.base.dir=node3 -Djboss.socket.binding.port-offset=2000 --server-config standalone-ha.xml &
	sleep ${SLEEP_TIME}
	cd credit; mvn -Ddeploy.port=10999 jboss-as:deploy -s ${SETTINGS}
	cd credit; mvn -Ddeploy.port=11999 jboss-as:deploy -s ${SETTINGS}
	cd dealer; mvn -Ddeploy.port=9999 jboss-as:deploy -s ${SETTINGS}
	cd client; mvn exec:java -s ${SETTINGS}

demos/helpdesk:
	mvn clean install -s ${SETTINGS}
	mvn -Dtest=HelpDeskTests test -s ${SETTINGS}

demos/multiApp:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp order-consumer/src/test/resources/switchyard-quickstart-demo-multi-order-consumer-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	cd artifacts; mvn jboss-as:deploy -s ${SETTINGS}
	cd order-consumer; mvn jboss-as:deploy -s ${SETTINGS}
	cd order-service; mvn jboss-as:deploy -s ${SETTINGS}
	cd web; mvn jboss-as:deploy -s ${SETTINGS}
	cd order-consumer; mvn exec:java -s ${SETTINGS}

demos/policy-security-basic demos/policy-security-wss-username:
	mvn clean install -s ${SETTINGS}
	keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit \
			-keystore ${JBOSS_HOME}/standalone/configuration/tomcat.jks \
			-dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
	${JBOSS_HOME}/bin/add-user.sh -a -u kermit -p the-frog-1 -r ApplicationRealm -ro friend -s
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https:add(socket-binding=https,scheme=https,protocol="HTTP/1.1",secure=true)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https/ssl=configuration:add(name="https",password="changeit",certificate-key-file="$${jboss.server.config.dir}/tomcat.jks")'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/:shutdown(restart=true)'
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="confidentiality clientAuthentication" -s ${SETTINGS}

demos/policy-security-cert:
	mvn clean install -s ${SETTINGS}
	keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit \
			-keystore ${JBOSS_HOME}/standalone/configuration/tomcat.jks \
			-dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https:add(socket-binding=https,scheme=https,protocol="HTTP/1.1",secure=true)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https/ssl=configuration:add(name="https",password="changeit",certificate-key-file="$${jboss.server.config.dir}/tomcat.jks")'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=policy-security-cert/:add(cache-type=default)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=policy-security-cert/authentication=classic:add(login-modules=[{"code"=>"org.switchyard.security.login.CertificateLoginModule", "flag"=>"required", "module-options"=>[("keyStoreLocation"=>"$${jboss.server.config.dir}/users.jks"),("keyStorePassword"=>"changeit"),("rolesProperties"=>"$${jboss.server.config.dir}/roles.properties")]}])'
	cp users.jks ${JBOSS_HOME}/standalone/configuration/
	cp roles.properties ${JBOSS_HOME}/standalone/configuration/
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/:shutdown(restart=true)'
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="confidentiality signencrypt" -s ${SETTINGS}

demos/policy-security-saml:
	mvn clean install -s ${SETTINGS}
	keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit \
			-keystore ${JBOSS_HOME}/standalone/configuration/tomcat.jks \
			-dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https:add(socket-binding=https,scheme=https,protocol="HTTP/1.1",secure=true)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https/ssl=configuration:add(name="https",password="changeit",certificate-key-file="$${jboss.server.config.dir}/tomcat.jks")'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=picketlink-sts/:add(cache-type=default)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=picketlink-sts/authentication=classic:add(login-modules=[{"code"=>"UserRoles", "flag"=>"required", "module-options"=>[("userProperties"=>"users.properties"),("rolesProperties"=>"roles.properties")]}])'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=saml-validate-token/:add(cache-type=default)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=security/security-domain=saml-validate-token/authentication=classic:add(login-modules=[{"code"=>"org.picketlink.identity.federation.core.wstrust.auth.STSValidatingLoginModule", "flag"=>"required", "module-options"=>[("configFile"=>"$${jboss.server.config.dir}/sts-client.properties"),("useOptionsCredentials"=>"true")]}])'
	cp sts-client.properties ${JBOSS_HOME}/standalone/configuration/
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/:shutdown(restart=true)'
	sleep ${SLEEP_TIME}
	cp picketlink-sts.war ${JBOSS_HOME}/standalone/deployments/
	sleep 20
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="confidentiality clientAuthentication" -s ${SETTINGS}

demos/policy-security-wss-signencrypt:
	mvn clean install -s ${SETTINGS}
	keytool -genkey -alias tomcat -keyalg RSA -keypass changeit -storepass changeit \
			-keystore ${JBOSS_HOME}/standalone/configuration/tomcat.jks \
			-dname "CN=Unknown, OU=Unknown, O=Unknown, L=Unknown, ST=Unknown, C=Unknown"
	${JBOSS_HOME}/bin/add-user.sh -a -u kermit -p the-frog-1 -r ApplicationRealm -ro friend -s
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https:add(socket-binding=https,scheme=https,protocol="HTTP/1.1",secure=true)'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=web/connector=https/ssl=configuration:add(name="https",password="changeit",certificate-key-file="$${jboss.server.config.dir}/tomcat.jks")'
	${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/:shutdown(restart=true)'
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="confidentiality signencrypt" -s ${SETTINGS}

demos/policy-transaction:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-demo-policy-transaction-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

http-binding:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="vineyard" -s ${SETTINGS}

jca-inflow-activemq jca-outbound-activemq:
	echo "Needs running ActiveMQ"
	false
	#mvn clean install -s ${SETTINGS}
	#wget http://repo1.maven.org/maven2/org/apache/activemq/activemq-rar/5.8.0/activemq-rar-5.8.0.rar
	#mv activemq-rar-5.8.0.rar ${JBOSS_HOME}/standalone/deployments/activemq-rar.rar
	## download and start of activemq required here
	#${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	#sleep ${SLEEP_TIME}
	#${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=resource-adapters/resource-adapter=activemq-ra.rar:add(archive=activemq-ra.rar)'
	#${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=resource-adapters/resource-adapter=activemq-ra.rar/connection-definitions=QueueConnectionFactory:add(class-name=org.apache.activemq.ra.ActiveMQManagedConnectionFactory,jndi-name=java:/JmsXA)'
	#${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=resource-adapters/resource-adapter=activemq-ra.rar/connection-definitions=QueueConnectionFactory/config-properties=ServerUrl:add(value=tcp://127.0.0.1:61616)'
	#${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=resource-adapters/resource-adapter=activemq-ra.rar/admin-objects=ShippingQueue:add(class-name=org.apache.activemq.command.ActiveMQQueue,jndi-name=java:/ShippingQueue)'
	#${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=resource-adapters/resource-adapter=activemq-ra.rar/admin-objects=ShippingQueue/config-properties=PhysicalName:add(value=ShippingQueue)'
	#${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=resource-adapters/resource-adapter=activemq-ra.rar/admin-objects=FillingStockQueue:add(class-name=org.apache.activemq.command.ActiveMQQueue,jndi-name=java:/FillingStockQueue)'
	#${JBOSS_HOME}/bin/jboss-cli.sh --connect --command='/subsystem=resource-adapters/resource-adapter=activemq-ra.rar/admin-objects=FillingStockQueue/config-properties=PhysicalName:add(value=FillingStockQueue)'
	#mvn jboss-as:deploy -s ${SETTINGS}
	#mvn exec:java -s ${SETTINGS}

jca-inflow-hornetq:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-jca-inflow-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

jca-outbound-hornetq:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	${JBOSS_HOME}/bin/add-user.sh -a -u guest -p guestp.1 -r ApplicationRealm -ro guest -s
	cp src/test/resources/switchyard-quickstart-jca-outbound-hornetq-jms.xml ${JBOSS_HOME}/standalone/deployments/
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

rest-binding:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="new" -s ${SETTINGS}
	mvn exec:java -Dexec.args="add 1 3 10" -s ${SETTINGS}
	mvn exec:java -Dexec.args="add 1 4 1" -s ${SETTINGS}
	mvn exec:java -Dexec.args="del 1 3" -s ${SETTINGS}
	mvn exec:java -Dexec.args="get 1" -s ${SETTINGS}

rules-camel-cbr:
	mvn clean install -s ${SETTINGS}
	mvn -Dtest=RulesCamelCBRTest test -s ${SETTINGS}

rules-interview rules-interview-container:
	mvn clean install -s ${SETTINGS}
	mvn -Dtest=RulesInterviewTest test -s ${SETTINGS}

soap-addressing:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="Boeing 10" -s ${SETTINGS}

soap-attachment soap-mtom:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -s ${SETTINGS}

soap-binding-rpc:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh --server-config=standalone-full.xml | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn exec:java -Dexec.args="Einstein" -s ${SETTINGS}

transform-json:
	mvn clean install -s ${SETTINGS}
	mvn -Dtest=JsonTransformationTest test -s ${SETTINGS}

transform-smooks:
	mvn clean install -s ${SETTINGS}
	${JBOSS_HOME}/bin/standalone.sh | tee ${WORKSPACE}/server.log &
	sleep ${SLEEP_TIME}
	mvn jboss-as:deploy -s ${SETTINGS}
	mvn -Dtest=ServiceTransformationTest test -s ${SETTINGS}
